{"mappings":"ACEA,IAAM,EAAO,SAAS,aAAa,CAAC,QAYpC,EAVqB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAQ,6BACV,GAEA,WAAW,WACT,EAAO,AAAI,MAAM,8BACnB,EAAG,IACL,IAIA,IAAM,EAAgB,IAAI,QAAQ,SAAC,CAAnC,EACE,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAQ,8BACV,GAEA,SAAS,gBAAgB,CAAC,cAAe,WACvC,EAAQ,+BAOR,EAJqB,IAAI,QAAQ,SAAC,CAAlC,EACE,EAAQ,6BACV,GAGF,EACF,GAIA,SAAS,EAAmB,CAAO,EACjC,EACG,IAAI,CAAC,SAAC,CADT,EAEI,EAAK,kBAAkB,CACrB,YACA,+CAAuD,MAAA,CAAR,EAAQ,UAE3D,GACC,KAAK,CAAC,SAAC,CADR,EAEE,EAAK,kBAAkB,CACrB,YACA,6CAAmD,MAAA,CAAN,EAAM,UAEvD,EACJ,CAhBA,EAAmB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar body = document.querySelector(\"body\");\nvar firstPromise = new Promise(function(resolve, reject) {\n    document.addEventListener(\"click\", function() {\n        resolve(\"First promise was resolved\");\n    });\n    setTimeout(function() {\n        reject(new Error(\"First promise was rejected\"));\n    }, 3000);\n});\ncreateNotification(firstPromise);\nvar secondPromise = new Promise(function(resolve) {\n    document.addEventListener(\"click\", function() {\n        resolve(\"Second promise was resolved\");\n    });\n    document.addEventListener(\"contextmenu\", function() {\n        resolve(\"Second promise was resolved\");\n        // eslint-disable-next-line no-shadow\n        var thirdPromise = new Promise(function(resolve) {\n            resolve(\"Third promise was resolved\");\n        });\n        createNotification(thirdPromise);\n    });\n});\ncreateNotification(secondPromise);\nfunction createNotification(promise) {\n    promise.then(function(message) {\n        body.insertAdjacentHTML(\"beforeend\", '<div class=\"success\" data-qa=\"notification\">'.concat(message, \"</div>\"));\n    }).catch(function(error) {\n        body.insertAdjacentHTML(\"beforeend\", '<div class=\"error\" data-qa=\"notification\">'.concat(error, \"</div>\"));\n    });\n}\n\n//# sourceMappingURL=index.5f6c08f5.js.map\n","'use strict';\n\nconst body = document.querySelector('body');\n\nconst firstPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve('First promise was resolved');\n  });\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n  }, 3000);\n});\n\ncreateNotification(firstPromise);\n\nconst secondPromise = new Promise((resolve) => {\n  document.addEventListener('click', () => {\n    resolve('Second promise was resolved');\n  });\n\n  document.addEventListener('contextmenu', () => {\n    resolve('Second promise was resolved');\n\n    // eslint-disable-next-line no-shadow\n    const thirdPromise = new Promise((resolve) => {\n      resolve('Third promise was resolved');\n    });\n\n    createNotification(thirdPromise);\n  });\n});\n\ncreateNotification(secondPromise);\n\nfunction createNotification(promise) {\n  promise\n    .then((message) => {\n      body.insertAdjacentHTML(\n        'beforeend',\n        `<div class=\"success\" data-qa=\"notification\">${message}</div>`,\n      );\n    })\n    .catch((error) => {\n      body.insertAdjacentHTML(\n        'beforeend',\n        `<div class=\"error\" data-qa=\"notification\">${error}</div>`,\n      );\n    });\n}\n"],"names":["body","document","querySelector","createNotification","Promise","resolve","reject","addEventListener","setTimeout","Error","secondPromise","promise","then","message","insertAdjacentHTML","concat","catch","error"],"version":3,"file":"index.5f6c08f5.js.map"}